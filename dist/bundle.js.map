{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 78e2cdf2cfc0fc9bde61","webpack:///external \"express\"","webpack:///external \"serve-static\"","webpack:///./src/entry.coffee","webpack:///./src/app.coffee","webpack:///./src/routes/admin.coffee","webpack:///./src/routes/db.coffee","webpack:///./src/routes/index.coffee","webpack:///./src/routes/protect.coffee","webpack:///external \"body-parser\"","webpack:///external \"cookie-parser\"","webpack:///external \"express-session\"","webpack:///external \"morgan\"","webpack:///external \"path\"","webpack:///external \"pg\""],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","Object","defineProperty","configurable","enumerable","get","n","__esModule","o","object","property","prototype","hasOwnProperty","p","s","require","PORT","SCALE","app","ref","process","env","listen","console","log","__moduleBindings","getEvalSource","injectScope","bindings","patchedBindings","evalScope","moduleEvalWithScope","moduleEval","Express","admin","api","body","cookie","logger","resolve","routes","serve","session","global","use","secret","AUTH0_CLIENT_SECRET","resave","saveUninitialized","urlencoded","extended","json","Router","router","pg","defaults","ssl","req","res","next","set","connect","DATABASE_URL","err","client","query","on","row","write","JSON","stringify","db","protect","message","post","id","send","NODE_ENV","production"],"mappings":"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","file":"bundle.js","sourcesContent":["/*! require(\"source-map-support\").install() */\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmory imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmory exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tObject.defineProperty(exports, name, {\n/******/ \t\t\tconfigurable: false,\n/******/ \t\t\tenumerable: true,\n/******/ \t\t\tget: getter\n/******/ \t\t});\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 14);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"express\");\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"serve-static\");\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar PORT, SCALE, app, ref;\n\nref = process.env, PORT = ref.PORT, SCALE = ref.SCALE;\n\nPORT || (PORT = 3000);\n\napp = __webpack_require__(3);\n\napp.listen(PORT, function() {\n  return console.log(\"Express listening on port \" + PORT);\n});\n\n\n/* HOT PATCH LOADER */ var __moduleBindings = []; if(false) {\n  module.hot.accept(function(err) {\n    console.log('[HMR] Error accepting: ' + err);\n  });\n\n  var getEvalSource = function(func) {\n    var code = func.toString();\n    var m = code.match(/^function\\s+__eval\\s*\\((.*)\\)\\s*\\{([\\s\\S]*)\\}$/i);\n    if(!m) {\n      return null;\n    }\n    var args = m[1];\n    var body = m[2];\n    var scope = {};\n\n    if(args.trim()) {\n      args.split(',').forEach(function(arg) {\n        if(arg.indexOf('=') !== -1) {\n          var p = arg.split('=');\n          scope[p[0].trim()] = JSON.parse(p[1]);\n        }\n        else {\n          scope[arg.trim()] = undefined;\n        }\n      });\n    }\n\n    return { body: body, scope: scope };\n  }\n\n  var injectScope = function(scope, code) {\n    // Take an explicit scope object and inject it so that\n    // `code` runs in context of it\n    var injected = Object.keys(scope).map(function(binding) {\n      return 'var ' + binding + ' = evalScope.' + binding + ';'\n    }).join(' ');\n\n    // Update our scope object with any modifications\n    var extracted = Object.keys(scope).map(function(binding) {\n      return 'evalScope.' + binding + ' = ' + binding + ';';\n    }).join(' ');\n\n    return injected + code + extracted;\n  }\n\n  var bindings = __moduleBindings;\n\n  if(!module.hot.data) {\n    // First time loading. Try and patch something.\n    var patchedBindings = {};\n    var evalScope = {};\n\n    var moduleEvalWithScope = function(frame) {\n      // Update the scope to reflect only the values specified as\n      // arguments to the __eval function. Copy over values from the\n      // existing scope and ignore the rest.\n      Object.keys(evalScope).forEach(function(arg) {\n        if(arg in frame.scope) {\n          frame.scope[arg] = evalScope[arg];\n        }\n      });\n      evalScope = frame.scope;\n\n      var code = injectScope(evalScope, frame.body);\n      return eval(code);\n    }\n\n    var moduleEval = function(code) {\n      return eval(code);\n    }\n\n    bindings.forEach(function(binding) {\n      var f = eval(binding);\n\n      if(typeof f === 'function' && binding !== '__eval') {\n        var patched = function() {\n          if(patchedBindings[binding]) {\n            return patchedBindings[binding].apply(this, arguments);\n          }\n          else {\n            return f.apply(this, arguments);\n          }\n        };\n        patched.prototype = f.prototype;\n\n        eval(binding + ' = patched;\\n');\n\n        if(module.exports[binding]) {\n          module.exports[binding] = patched;\n        }\n      }\n    });\n\n    module.hot.dispose(function(data) {\n      data.patchedBindings = patchedBindings;\n      data.moduleEval = moduleEval;\n      data.moduleEvalWithScope = moduleEvalWithScope;\n    });\n  }\n  else {\n    var patchedBindings = module.hot.data.patchedBindings;\n\n    bindings.forEach(function(binding) {\n      var f = eval(binding);\n\n      if(typeof f === 'function' && binding !== '__eval') {\n        // We need to reify the function in the original module so\n        // it references any of the original state. Strip the name\n        // and simply eval it.\n        var funcCode = (\n          '(' + f.toString().replace(/^function \\w+\\(/, 'function (') + ')'\n        );\n        patchedBindings[binding] = module.hot.data.moduleEval(funcCode);\n      }\n    });\n\n    if(typeof __eval === 'function') {\n      try {\n        module.hot.data.moduleEvalWithScope(getEvalSource(__eval));\n      }\n      catch(e) {\n        console.log('error evaling: ' + e);\n      }\n    }\n\n    module.hot.dispose(function(data) {\n      data.patchedBindings = patchedBindings;\n      data.moduleEval = module.hot.data.moduleEval;\n      data.moduleEvalWithScope = module.hot.data.moduleEvalWithScope;\n    });\n  }\n}\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Express, admin, api, app, body, cookie, logger, resolve, routes, serve, session;\n\nExpress = __webpack_require__(0);\n\nserve = __webpack_require__(1);\n\nresolve = __webpack_require__(12).resolve;\n\nroutes = global.routes;\n\nsession = __webpack_require__(10);\n\ncookie = __webpack_require__(9);\n\nlogger = __webpack_require__(11);\n\nbody = __webpack_require__(8);\n\napi = __webpack_require__(6);\n\nadmin = __webpack_require__(4);\n\napp = new Express;\n\napp.use(cookie());\n\napp.use(session({\n  secret: process.env.AUTH0_CLIENT_SECRET,\n  resave: false,\n  saveUninitialized: false\n}));\n\nif (false) {\n  app.use(logger('dev'));\n}\n\napp.use(serve('public'));\n\napp.use(body.urlencoded({\n  extended: false\n}));\n\napp.use(body.json());\n\napp.use('/api', api);\n\napp.use('/admin', admin);\n\nmodule.exports = app;\n\n\n/* HOT PATCH LOADER */ var __moduleBindings = []; if(false) {\n  module.hot.accept(function(err) {\n    console.log('[HMR] Error accepting: ' + err);\n  });\n\n  var getEvalSource = function(func) {\n    var code = func.toString();\n    var m = code.match(/^function\\s+__eval\\s*\\((.*)\\)\\s*\\{([\\s\\S]*)\\}$/i);\n    if(!m) {\n      return null;\n    }\n    var args = m[1];\n    var body = m[2];\n    var scope = {};\n\n    if(args.trim()) {\n      args.split(',').forEach(function(arg) {\n        if(arg.indexOf('=') !== -1) {\n          var p = arg.split('=');\n          scope[p[0].trim()] = JSON.parse(p[1]);\n        }\n        else {\n          scope[arg.trim()] = undefined;\n        }\n      });\n    }\n\n    return { body: body, scope: scope };\n  }\n\n  var injectScope = function(scope, code) {\n    // Take an explicit scope object and inject it so that\n    // `code` runs in context of it\n    var injected = Object.keys(scope).map(function(binding) {\n      return 'var ' + binding + ' = evalScope.' + binding + ';'\n    }).join(' ');\n\n    // Update our scope object with any modifications\n    var extracted = Object.keys(scope).map(function(binding) {\n      return 'evalScope.' + binding + ' = ' + binding + ';';\n    }).join(' ');\n\n    return injected + code + extracted;\n  }\n\n  var bindings = __moduleBindings;\n\n  if(!module.hot.data) {\n    // First time loading. Try and patch something.\n    var patchedBindings = {};\n    var evalScope = {};\n\n    var moduleEvalWithScope = function(frame) {\n      // Update the scope to reflect only the values specified as\n      // arguments to the __eval function. Copy over values from the\n      // existing scope and ignore the rest.\n      Object.keys(evalScope).forEach(function(arg) {\n        if(arg in frame.scope) {\n          frame.scope[arg] = evalScope[arg];\n        }\n      });\n      evalScope = frame.scope;\n\n      var code = injectScope(evalScope, frame.body);\n      return eval(code);\n    }\n\n    var moduleEval = function(code) {\n      return eval(code);\n    }\n\n    bindings.forEach(function(binding) {\n      var f = eval(binding);\n\n      if(typeof f === 'function' && binding !== '__eval') {\n        var patched = function() {\n          if(patchedBindings[binding]) {\n            return patchedBindings[binding].apply(this, arguments);\n          }\n          else {\n            return f.apply(this, arguments);\n          }\n        };\n        patched.prototype = f.prototype;\n\n        eval(binding + ' = patched;\\n');\n\n        if(module.exports[binding]) {\n          module.exports[binding] = patched;\n        }\n      }\n    });\n\n    module.hot.dispose(function(data) {\n      data.patchedBindings = patchedBindings;\n      data.moduleEval = moduleEval;\n      data.moduleEvalWithScope = moduleEvalWithScope;\n    });\n  }\n  else {\n    var patchedBindings = module.hot.data.patchedBindings;\n\n    bindings.forEach(function(binding) {\n      var f = eval(binding);\n\n      if(typeof f === 'function' && binding !== '__eval') {\n        // We need to reify the function in the original module so\n        // it references any of the original state. Strip the name\n        // and simply eval it.\n        var funcCode = (\n          '(' + f.toString().replace(/^function \\w+\\(/, 'function (') + ')'\n        );\n        patchedBindings[binding] = module.hot.data.moduleEval(funcCode);\n      }\n    });\n\n    if(typeof __eval === 'function') {\n      try {\n        module.hot.data.moduleEvalWithScope(getEvalSource(__eval));\n      }\n      catch(e) {\n        console.log('error evaling: ' + e);\n      }\n    }\n\n    module.hot.dispose(function(data) {\n      data.patchedBindings = patchedBindings;\n      data.moduleEval = module.hot.data.moduleEval;\n      data.moduleEvalWithScope = module.hot.data.moduleEvalWithScope;\n    });\n  }\n}\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Router, router, serve;\n\nRouter = __webpack_require__(0).Router;\n\nserve = __webpack_require__(1);\n\nrouter = new Router;\n\nrouter.use('/', serve('node_modules/admin-lte'));\n\nmodule.exports = router;\n\n\n/* HOT PATCH LOADER */ var __moduleBindings = []; if(false) {\n  module.hot.accept(function(err) {\n    console.log('[HMR] Error accepting: ' + err);\n  });\n\n  var getEvalSource = function(func) {\n    var code = func.toString();\n    var m = code.match(/^function\\s+__eval\\s*\\((.*)\\)\\s*\\{([\\s\\S]*)\\}$/i);\n    if(!m) {\n      return null;\n    }\n    var args = m[1];\n    var body = m[2];\n    var scope = {};\n\n    if(args.trim()) {\n      args.split(',').forEach(function(arg) {\n        if(arg.indexOf('=') !== -1) {\n          var p = arg.split('=');\n          scope[p[0].trim()] = JSON.parse(p[1]);\n        }\n        else {\n          scope[arg.trim()] = undefined;\n        }\n      });\n    }\n\n    return { body: body, scope: scope };\n  }\n\n  var injectScope = function(scope, code) {\n    // Take an explicit scope object and inject it so that\n    // `code` runs in context of it\n    var injected = Object.keys(scope).map(function(binding) {\n      return 'var ' + binding + ' = evalScope.' + binding + ';'\n    }).join(' ');\n\n    // Update our scope object with any modifications\n    var extracted = Object.keys(scope).map(function(binding) {\n      return 'evalScope.' + binding + ' = ' + binding + ';';\n    }).join(' ');\n\n    return injected + code + extracted;\n  }\n\n  var bindings = __moduleBindings;\n\n  if(!module.hot.data) {\n    // First time loading. Try and patch something.\n    var patchedBindings = {};\n    var evalScope = {};\n\n    var moduleEvalWithScope = function(frame) {\n      // Update the scope to reflect only the values specified as\n      // arguments to the __eval function. Copy over values from the\n      // existing scope and ignore the rest.\n      Object.keys(evalScope).forEach(function(arg) {\n        if(arg in frame.scope) {\n          frame.scope[arg] = evalScope[arg];\n        }\n      });\n      evalScope = frame.scope;\n\n      var code = injectScope(evalScope, frame.body);\n      return eval(code);\n    }\n\n    var moduleEval = function(code) {\n      return eval(code);\n    }\n\n    bindings.forEach(function(binding) {\n      var f = eval(binding);\n\n      if(typeof f === 'function' && binding !== '__eval') {\n        var patched = function() {\n          if(patchedBindings[binding]) {\n            return patchedBindings[binding].apply(this, arguments);\n          }\n          else {\n            return f.apply(this, arguments);\n          }\n        };\n        patched.prototype = f.prototype;\n\n        eval(binding + ' = patched;\\n');\n\n        if(module.exports[binding]) {\n          module.exports[binding] = patched;\n        }\n      }\n    });\n\n    module.hot.dispose(function(data) {\n      data.patchedBindings = patchedBindings;\n      data.moduleEval = moduleEval;\n      data.moduleEvalWithScope = moduleEvalWithScope;\n    });\n  }\n  else {\n    var patchedBindings = module.hot.data.patchedBindings;\n\n    bindings.forEach(function(binding) {\n      var f = eval(binding);\n\n      if(typeof f === 'function' && binding !== '__eval') {\n        // We need to reify the function in the original module so\n        // it references any of the original state. Strip the name\n        // and simply eval it.\n        var funcCode = (\n          '(' + f.toString().replace(/^function \\w+\\(/, 'function (') + ')'\n        );\n        patchedBindings[binding] = module.hot.data.moduleEval(funcCode);\n      }\n    });\n\n    if(typeof __eval === 'function') {\n      try {\n        module.hot.data.moduleEvalWithScope(getEvalSource(__eval));\n      }\n      catch(e) {\n        console.log('error evaling: ' + e);\n      }\n    }\n\n    module.hot.dispose(function(data) {\n      data.patchedBindings = patchedBindings;\n      data.moduleEval = module.hot.data.moduleEval;\n      data.moduleEvalWithScope = module.hot.data.moduleEvalWithScope;\n    });\n  }\n}\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Router, pg, router;\n\nRouter = __webpack_require__(0).Router;\n\nrouter = new Router;\n\npg = __webpack_require__(13);\n\npg.defaults.ssl = true;\n\nrouter.get('/', function(req, res, next) {\n  res.set('Content-Type', 'application/json');\n  return pg.connect(process.env.DATABASE_URL, function(err, client) {\n    if (err) {\n      throw err;\n    }\n    return client.query('select table_schema,table_name from information_schema.tables').on('row', function(row) {\n      return res.write(JSON.stringify(row));\n    });\n  });\n});\n\nmodule.exports = router;\n\n\n/* HOT PATCH LOADER */ var __moduleBindings = []; if(false) {\n  module.hot.accept(function(err) {\n    console.log('[HMR] Error accepting: ' + err);\n  });\n\n  var getEvalSource = function(func) {\n    var code = func.toString();\n    var m = code.match(/^function\\s+__eval\\s*\\((.*)\\)\\s*\\{([\\s\\S]*)\\}$/i);\n    if(!m) {\n      return null;\n    }\n    var args = m[1];\n    var body = m[2];\n    var scope = {};\n\n    if(args.trim()) {\n      args.split(',').forEach(function(arg) {\n        if(arg.indexOf('=') !== -1) {\n          var p = arg.split('=');\n          scope[p[0].trim()] = JSON.parse(p[1]);\n        }\n        else {\n          scope[arg.trim()] = undefined;\n        }\n      });\n    }\n\n    return { body: body, scope: scope };\n  }\n\n  var injectScope = function(scope, code) {\n    // Take an explicit scope object and inject it so that\n    // `code` runs in context of it\n    var injected = Object.keys(scope).map(function(binding) {\n      return 'var ' + binding + ' = evalScope.' + binding + ';'\n    }).join(' ');\n\n    // Update our scope object with any modifications\n    var extracted = Object.keys(scope).map(function(binding) {\n      return 'evalScope.' + binding + ' = ' + binding + ';';\n    }).join(' ');\n\n    return injected + code + extracted;\n  }\n\n  var bindings = __moduleBindings;\n\n  if(!module.hot.data) {\n    // First time loading. Try and patch something.\n    var patchedBindings = {};\n    var evalScope = {};\n\n    var moduleEvalWithScope = function(frame) {\n      // Update the scope to reflect only the values specified as\n      // arguments to the __eval function. Copy over values from the\n      // existing scope and ignore the rest.\n      Object.keys(evalScope).forEach(function(arg) {\n        if(arg in frame.scope) {\n          frame.scope[arg] = evalScope[arg];\n        }\n      });\n      evalScope = frame.scope;\n\n      var code = injectScope(evalScope, frame.body);\n      return eval(code);\n    }\n\n    var moduleEval = function(code) {\n      return eval(code);\n    }\n\n    bindings.forEach(function(binding) {\n      var f = eval(binding);\n\n      if(typeof f === 'function' && binding !== '__eval') {\n        var patched = function() {\n          if(patchedBindings[binding]) {\n            return patchedBindings[binding].apply(this, arguments);\n          }\n          else {\n            return f.apply(this, arguments);\n          }\n        };\n        patched.prototype = f.prototype;\n\n        eval(binding + ' = patched;\\n');\n\n        if(module.exports[binding]) {\n          module.exports[binding] = patched;\n        }\n      }\n    });\n\n    module.hot.dispose(function(data) {\n      data.patchedBindings = patchedBindings;\n      data.moduleEval = moduleEval;\n      data.moduleEvalWithScope = moduleEvalWithScope;\n    });\n  }\n  else {\n    var patchedBindings = module.hot.data.patchedBindings;\n\n    bindings.forEach(function(binding) {\n      var f = eval(binding);\n\n      if(typeof f === 'function' && binding !== '__eval') {\n        // We need to reify the function in the original module so\n        // it references any of the original state. Strip the name\n        // and simply eval it.\n        var funcCode = (\n          '(' + f.toString().replace(/^function \\w+\\(/, 'function (') + ')'\n        );\n        patchedBindings[binding] = module.hot.data.moduleEval(funcCode);\n      }\n    });\n\n    if(typeof __eval === 'function') {\n      try {\n        module.hot.data.moduleEvalWithScope(getEvalSource(__eval));\n      }\n      catch(e) {\n        console.log('error evaling: ' + e);\n      }\n    }\n\n    module.hot.dispose(function(data) {\n      data.patchedBindings = patchedBindings;\n      data.moduleEval = module.hot.data.moduleEval;\n      data.moduleEvalWithScope = module.hot.data.moduleEvalWithScope;\n    });\n  }\n}\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Router, db, protect, router;\n\nRouter = __webpack_require__(0).Router;\n\nrouter = new Router;\n\ndb = __webpack_require__(5);\n\nprotect = __webpack_require__(7);\n\nrouter.get('/', function(req, res) {\n  return res.json({\n    message: 'asga Hasglo, world 21'\n  });\n});\n\nrouter.post('/', function(req, res) {\n  var id, stringify;\n  id = req.body.id;\n  stringify = JSON.stringify;\n  console.log(stringify(id));\n  return res.send(stringify(id));\n});\n\nrouter.get('/isprod', function(req, res) {\n  var NODE_ENV, production, stringify;\n  stringify = JSON.stringify;\n  NODE_ENV = process.env.NODE_ENV;\n  console.log(NODE_ENV);\n  production = stringify(NODE_ENV);\n  return res.send({\n    production: production\n  });\n});\n\nmodule.exports = router;\n\n\n/* HOT PATCH LOADER */ var __moduleBindings = []; if(false) {\n  module.hot.accept(function(err) {\n    console.log('[HMR] Error accepting: ' + err);\n  });\n\n  var getEvalSource = function(func) {\n    var code = func.toString();\n    var m = code.match(/^function\\s+__eval\\s*\\((.*)\\)\\s*\\{([\\s\\S]*)\\}$/i);\n    if(!m) {\n      return null;\n    }\n    var args = m[1];\n    var body = m[2];\n    var scope = {};\n\n    if(args.trim()) {\n      args.split(',').forEach(function(arg) {\n        if(arg.indexOf('=') !== -1) {\n          var p = arg.split('=');\n          scope[p[0].trim()] = JSON.parse(p[1]);\n        }\n        else {\n          scope[arg.trim()] = undefined;\n        }\n      });\n    }\n\n    return { body: body, scope: scope };\n  }\n\n  var injectScope = function(scope, code) {\n    // Take an explicit scope object and inject it so that\n    // `code` runs in context of it\n    var injected = Object.keys(scope).map(function(binding) {\n      return 'var ' + binding + ' = evalScope.' + binding + ';'\n    }).join(' ');\n\n    // Update our scope object with any modifications\n    var extracted = Object.keys(scope).map(function(binding) {\n      return 'evalScope.' + binding + ' = ' + binding + ';';\n    }).join(' ');\n\n    return injected + code + extracted;\n  }\n\n  var bindings = __moduleBindings;\n\n  if(!module.hot.data) {\n    // First time loading. Try and patch something.\n    var patchedBindings = {};\n    var evalScope = {};\n\n    var moduleEvalWithScope = function(frame) {\n      // Update the scope to reflect only the values specified as\n      // arguments to the __eval function. Copy over values from the\n      // existing scope and ignore the rest.\n      Object.keys(evalScope).forEach(function(arg) {\n        if(arg in frame.scope) {\n          frame.scope[arg] = evalScope[arg];\n        }\n      });\n      evalScope = frame.scope;\n\n      var code = injectScope(evalScope, frame.body);\n      return eval(code);\n    }\n\n    var moduleEval = function(code) {\n      return eval(code);\n    }\n\n    bindings.forEach(function(binding) {\n      var f = eval(binding);\n\n      if(typeof f === 'function' && binding !== '__eval') {\n        var patched = function() {\n          if(patchedBindings[binding]) {\n            return patchedBindings[binding].apply(this, arguments);\n          }\n          else {\n            return f.apply(this, arguments);\n          }\n        };\n        patched.prototype = f.prototype;\n\n        eval(binding + ' = patched;\\n');\n\n        if(module.exports[binding]) {\n          module.exports[binding] = patched;\n        }\n      }\n    });\n\n    module.hot.dispose(function(data) {\n      data.patchedBindings = patchedBindings;\n      data.moduleEval = moduleEval;\n      data.moduleEvalWithScope = moduleEvalWithScope;\n    });\n  }\n  else {\n    var patchedBindings = module.hot.data.patchedBindings;\n\n    bindings.forEach(function(binding) {\n      var f = eval(binding);\n\n      if(typeof f === 'function' && binding !== '__eval') {\n        // We need to reify the function in the original module so\n        // it references any of the original state. Strip the name\n        // and simply eval it.\n        var funcCode = (\n          '(' + f.toString().replace(/^function \\w+\\(/, 'function (') + ')'\n        );\n        patchedBindings[binding] = module.hot.data.moduleEval(funcCode);\n      }\n    });\n\n    if(typeof __eval === 'function') {\n      try {\n        module.hot.data.moduleEvalWithScope(getEvalSource(__eval));\n      }\n      catch(e) {\n        console.log('error evaling: ' + e);\n      }\n    }\n\n    module.hot.dispose(function(data) {\n      data.patchedBindings = patchedBindings;\n      data.moduleEval = module.hot.data.moduleEval;\n      data.moduleEvalWithScope = module.hot.data.moduleEvalWithScope;\n    });\n  }\n}\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\nvar Router, router;\n\nRouter = __webpack_require__(0).Router;\n\nrouter = new Router;\n\nrouter.get('/', function(req, res) {\n  return console.log('123');\n});\n\n\n/* HOT PATCH LOADER */ var __moduleBindings = []; if(false) {\n  module.hot.accept(function(err) {\n    console.log('[HMR] Error accepting: ' + err);\n  });\n\n  var getEvalSource = function(func) {\n    var code = func.toString();\n    var m = code.match(/^function\\s+__eval\\s*\\((.*)\\)\\s*\\{([\\s\\S]*)\\}$/i);\n    if(!m) {\n      return null;\n    }\n    var args = m[1];\n    var body = m[2];\n    var scope = {};\n\n    if(args.trim()) {\n      args.split(',').forEach(function(arg) {\n        if(arg.indexOf('=') !== -1) {\n          var p = arg.split('=');\n          scope[p[0].trim()] = JSON.parse(p[1]);\n        }\n        else {\n          scope[arg.trim()] = undefined;\n        }\n      });\n    }\n\n    return { body: body, scope: scope };\n  }\n\n  var injectScope = function(scope, code) {\n    // Take an explicit scope object and inject it so that\n    // `code` runs in context of it\n    var injected = Object.keys(scope).map(function(binding) {\n      return 'var ' + binding + ' = evalScope.' + binding + ';'\n    }).join(' ');\n\n    // Update our scope object with any modifications\n    var extracted = Object.keys(scope).map(function(binding) {\n      return 'evalScope.' + binding + ' = ' + binding + ';';\n    }).join(' ');\n\n    return injected + code + extracted;\n  }\n\n  var bindings = __moduleBindings;\n\n  if(!module.hot.data) {\n    // First time loading. Try and patch something.\n    var patchedBindings = {};\n    var evalScope = {};\n\n    var moduleEvalWithScope = function(frame) {\n      // Update the scope to reflect only the values specified as\n      // arguments to the __eval function. Copy over values from the\n      // existing scope and ignore the rest.\n      Object.keys(evalScope).forEach(function(arg) {\n        if(arg in frame.scope) {\n          frame.scope[arg] = evalScope[arg];\n        }\n      });\n      evalScope = frame.scope;\n\n      var code = injectScope(evalScope, frame.body);\n      return eval(code);\n    }\n\n    var moduleEval = function(code) {\n      return eval(code);\n    }\n\n    bindings.forEach(function(binding) {\n      var f = eval(binding);\n\n      if(typeof f === 'function' && binding !== '__eval') {\n        var patched = function() {\n          if(patchedBindings[binding]) {\n            return patchedBindings[binding].apply(this, arguments);\n          }\n          else {\n            return f.apply(this, arguments);\n          }\n        };\n        patched.prototype = f.prototype;\n\n        eval(binding + ' = patched;\\n');\n\n        if(module.exports[binding]) {\n          module.exports[binding] = patched;\n        }\n      }\n    });\n\n    module.hot.dispose(function(data) {\n      data.patchedBindings = patchedBindings;\n      data.moduleEval = moduleEval;\n      data.moduleEvalWithScope = moduleEvalWithScope;\n    });\n  }\n  else {\n    var patchedBindings = module.hot.data.patchedBindings;\n\n    bindings.forEach(function(binding) {\n      var f = eval(binding);\n\n      if(typeof f === 'function' && binding !== '__eval') {\n        // We need to reify the function in the original module so\n        // it references any of the original state. Strip the name\n        // and simply eval it.\n        var funcCode = (\n          '(' + f.toString().replace(/^function \\w+\\(/, 'function (') + ')'\n        );\n        patchedBindings[binding] = module.hot.data.moduleEval(funcCode);\n      }\n    });\n\n    if(typeof __eval === 'function') {\n      try {\n        module.hot.data.moduleEvalWithScope(getEvalSource(__eval));\n      }\n      catch(e) {\n        console.log('error evaling: ' + e);\n      }\n    }\n\n    module.hot.dispose(function(data) {\n      data.patchedBindings = patchedBindings;\n      data.moduleEval = module.hot.data.moduleEval;\n      data.moduleEvalWithScope = module.hot.data.moduleEvalWithScope;\n    });\n  }\n}\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"body-parser\");\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"cookie-parser\");\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"express-session\");\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"morgan\");\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"path\");\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\nmodule.exports = require(\"pg\");\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(2);\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 78e2cdf2cfc0fc9bde61","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"serve-static\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"serve-static\"\n// module id = 1\n// module chunks = 0","{PORT, SCALE} = process.env\n\nPORT or= 3000\n\napp = require './app.coffee'\napp.listen PORT, -> console.log \"Express listening on port #{PORT}\"\n\n\n\n// WEBPACK FOOTER //\n// ./src/entry.coffee","Express = require 'express'\nserve = require 'serve-static'\n{resolve} = require 'path'\n{routes} = global\n\n#middlewares\nsession = require 'express-session'\ncookie = require 'cookie-parser'\nlogger = require 'morgan'\nbody = require 'body-parser'\n\n#routes\napi = require 'routes'\nadmin = require 'routes/admin'\n\napp = new Express\napp.use cookie()\napp.use session\n  secret: process.env.AUTH0_CLIENT_SECRET\n  resave: no\n  saveUninitialized: no\napp.use logger 'dev' if not production\napp.use serve 'public' # static files\napp.use body.urlencoded extended: false\napp.use body.json()\n\napp.use '/api', api # API routes\napp.use '/admin', admin\n\nmodule.exports = app\n\n\n\n// WEBPACK FOOTER //\n// ./src/app.coffee","{Router,} = require 'express'\nserve = require 'serve-static'\nrouter = new Router\n\nrouter.use '/', serve 'node_modules/admin-lte'\n\nmodule.exports = router\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/admin.coffee","{Router} = require 'express'\nrouter = new Router\npg = require 'pg'\npg.defaults.ssl = on\n\nrouter.get '/', (req, res, next) ->\n  res.set 'Content-Type', 'application/json'\n  pg.connect process.env.DATABASE_URL, (err, client) ->\n    if err then throw err\n    client\n      .query 'select table_schema,table_name from information_schema.tables'\n      .on 'row', (row) -> res.write JSON.stringify row\n        \nmodule.exports = router\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/db.coffee","{Router} = require 'express'\nrouter = new Router\ndb = require 'routes/db'\nprotect = require 'routes/protect'\n\n#router.use '/db', db\n#router.use '/protected', protect\n\nrouter.get '/', (req, res) ->\n  res.json\n    message: 'asga Hasglo, world 21'\n\nrouter.post '/', (req, res) ->\n  {id} = req.body\n  {stringify} = JSON\n  console.log stringify id\n  res.send stringify id\n\nrouter.get '/isprod', (req, res) ->\n  {stringify} = JSON\n  {NODE_ENV} = process.env\n  console.log NODE_ENV\n  production = stringify NODE_ENV\n  res.send {production}\n\nmodule.exports = router\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/index.coffee","{Router} = require 'express'\nrouter = new Router\n\nrouter.get '/', (req, res) ->\n  console.log '123'\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/protect.coffee","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 8\n// module chunks = 0","module.exports = require(\"cookie-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cookie-parser\"\n// module id = 9\n// module chunks = 0","module.exports = require(\"express-session\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express-session\"\n// module id = 10\n// module chunks = 0","module.exports = require(\"morgan\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"morgan\"\n// module id = 11\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 12\n// module chunks = 0","module.exports = require(\"pg\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"pg\"\n// module id = 13\n// module chunks = 0"],"sourceRoot":""}