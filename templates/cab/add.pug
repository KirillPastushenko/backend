extends layout
block content
  section.content-header
    p.hidden.
      \[\begin{matrix}
      \dot{x} & = & \sigma(y-x) \\
      \dot{y} & = & \rho x - y - xz \\
      \dot{z} & = & -\beta z + xy
      \end{matrix} \]
    h1 Добавление задачи
    hr.under-heading
  section.content
    form(role="form", name="add-task", action="javascript:void 0")#add-task
      fieldset.form-group: .input-group
        span.input-group-addon Номер задания:  
        input(name="task", type="text", placeholder="Например: 24").form-control
      fieldset.form-group: .input-group
        span.input-group-addon Ответ задания:  
        input(name="answer", type="text", placeholder="Например: Хуец!").form-control
      fieldset.form-group
        label: h4 Текст задания
        textarea(name="text", placeholder="Task")#task-editor
      button(type="submit", name="send").btn.btn-primary.btn-default.btn-flat#send-task Отправить
  .modal.fade#message(role="dialog", tabindex="-1", aria-labeledby="#message-label"): .modal-dialog(role="document"): .modal-content
    //.modal-header
      //button(type="button", data-dissmiss="modal").close &times;
      h4.text-center Результат
    .modal-body: p: h1.text-center#message-body
      
block script
  script(defer, src="/serialize.js")
  //script(defer, src="//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTM")
  script(defer, onload="tinyMCEinit()", src="/cab/static/tinymce.min.js")
  script(defer).
    function tinyMCEinit() {
      const config = {
        selector: '#task-editor',
        height: 150,
        setup: editor => editor.on('change', ev => editor.save())
      };
      tinymce.init(config);
    }
  script.
    function approve(json) {
      const headers = new Headers;
      headers.append('Content-Type', 'application/json');
      const opts = {
        headers,
        method: 'POST'
      };
      fetch('/cab/add', opts)
        .then(data => data.json())
        .then(obj => {
          const el = $('#message');
          const body = el.find('#message-body')
          const {status, msg} = obj;
          body.html(msg);
          if (status) {
            console.log('Approved');
          } else {
            console.log('Failed');
          }
          el.modal();
        })
        .catch(err => console.error(err.message))
    }
    document.querySelector('#add-task').addEventListener('submit', ev => {
      const json = serialize(ev.target);
      const log = window.console.log.bind(console);
      [
        approve
      ].forEach(f => f(json));
    });
  style.
    hr.under-heading {
      background: #999;
      margin-top: 5px;
      margin-bottom: 0;
      padding: 0;
      height: 1px;
    }
    .hidden {
      display: none;
    }
    #task-editor {
      visibility: hidden;
      display: none;  
    }
    button#send-task {
      color: white;
    }
